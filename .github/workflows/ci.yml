name: Continuous Integration
on:
  push:
    branches: ['master', 'dev', 'feature/*']
  pull_request:
    branches: ['master', 'dev', 'feature/*']

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Run linters
        run: |
          bundle exec rake lint


  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: imd_test
          POSTGRES_DB: imd_test
          POSTGRES_PASSWORD: imd_test
        ports: ["5432:5432"]

    steps:
      - uses: actions/checkout@v2

      - name: Setup the app runtime and dependencies
        uses: ./.github/actions/ci-setup-rails

      - name: Pre-compile assets
        uses: ./.github/actions/ci-setup-assets

      - name: Run tests
        run: |
          echo "Running tests "
          bin/rspec --format progress --format RspecJunitFormatter --out tmp/rspec_${{ github.job }}.junit.xml

      - name: Upload test results for this instance
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: tmp/rspec_${{ github.job }}.junit.xml

  docker:
    runs-on: ubuntu-latest
    needs: [linters, unit_tests]
    env:
      repo: "matau/inspecteur-mes-demarches" # remove variable when getting back to maatinito dockerhub account
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: ${{ env.repo }} # sets to github.repository when getting back to maatinito dockerhub account
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=registry,ref=${{ env.repo }}:buildcache
        cache-to:   type=registry,ref=${{ env.repo }}:buildcache,mode=max
    - name: Update repo description
      uses: peter-evans/dockerhub-description@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        # sets to github.repository when getting back to maatinito dockerhub account
        repository: "${{ env.repo }}"
